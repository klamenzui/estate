// app/routes.js
const express = require('express');
const fs = require('fs');
//const {estates,payment,expense,estateMenu} = require("../models/Estate");
const app = express()
const Controller = require("../controllers/Controller.js");
var passport = require('passport');
console.log(Controller)
//module.exports = function(app, passport) {
	app.get('/home', Controller.navigate);
	/*app.get('/:page', function(req, res) {
		let page = req.params.page.toLowerCase();
		switch (page) {
			case "index":
				page = "home";
				break;
			case "login":
				res.render('base.ejs', {
					message: req.flash('loginMessage'),
					page : page
				});
				break;
			case "register":
				res.render('base.ejs', {
					message: req.flash('signupMessage'),
					page : page
				});
				break;
			case "forgot-password":
				res.render('base.ejs', {
					message: req.flash('signupMessage'),
					page : page
				});
				break;
			case "logout":
				req.logout(function(){
					console.log('logout');
				});
				res.redirect('/');
				break;
			default:
				if (req.isAuthenticated()){
					//path.join(__dirname, 'public')
					page = fs.existsSync(app.get('views') +"/"+ page + ".ejs") ? page: "404";
					console.log(page);
					if (page == '404'){
						res.render('index.ejs', {
							user : req.user, // get the user out of session and pass to template
							page : page
						});
					}else{
						getAcc(req,function(data){
							res.render('index.ejs', {
								user : req.user, // get the user out of session and pass to template
								page : page,
								data: data
							});
						});
					}
				} else {
					// if they aren't redirect them to the home page
					res.redirect('/login');
				}
		}
	});
*/
	app.get('/', function(req, res) {
		res.redirect('/home');
	});

	app.post('/api/estate', function(req, res) {
		estate(req,function(data){
			res.json(data);
		});
	});
	app.post('/api/estateMenu', function(req, res) {
		estateMenu(req,function(data){
			res.json(data);
		});
	});
	app.post('/api/payment', function(req, res) {
		console.log(req.body);
		payment(req.body,function(data){
			res.json(data);
		});
	});
	app.post('/api/expense', function(req, res) {
		console.log(req.body);
		expense(req.body,function(data){
			res.json(data);
		});
	});

	// process the login form
	app.post('/login', passport.authenticate('local-login', {
            successRedirect : 'home', // redirect to the secure profile section
            failureRedirect : 'login', // redirect back to the signup page if there is an error
            failureFlash : true // allow flash messages
		}),
        function(req, res) {
            console.log("hello");

            if (req.body.remember) {
              req.session.cookie.maxAge = 1000 * 60 * 3;
            } else {
              req.session.cookie.expires = false;
            }
        res.redirect('/');
    });

	// process the signup form
	app.post('/register', passport.authenticate('local-register', {
		successRedirect : 'home', // redirect to the secure profile section
		failureRedirect : 'register', // redirect back to the signup page if there is an error
		failureFlash : true // allow flash messages
	}));

	// process the reset password
	app.post('/reset', passport.authenticate('local-reset', {
		successRedirect : 'login', // redirect to the secure profile section
		failureRedirect : 'reset', // redirect back to the signup page if there is an error
		failureFlash : true // allow flash messages
		}),
		function(req, res) {
			console.log("reset");

			//if (req.body.email == 'some email') {
				// send email
				//res.redirect('/login');
			//} else {
				// flash error message
			//}
		}
		);

	app.use(error);

	function error(err, req, res, next) {
		// log it
		if (req.isAuthenticated()) console.error(err.stack);
		if(err.status == 404){
			res.status(404).send(
				"<h1>Page not found on the server</h1>");
			res.format({
				html: function () {
					res.render('404', { url: req.url })
				},
				json: function () {
					res.json({ error: 'Not found' })
				},
				default: function () {
					res.type('txt').send('Not found')
				}
			})
		}else{
			// respond with 500 "Internal Server Error".
			res.status(err.status || 500).send('Internal Server Error');
		}


	}
//};
module.exports = app